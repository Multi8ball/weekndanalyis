library(dplyr)
library(tidyverse)
library(gutenbergr)
library(tidytext)
library(tidyr)
library(readxl)
Lyrics_Database <- read_excel("C:/Users/Vishal Shrivastava/Desktop/Weeknd/Lyrics Database.xlsx")
View(Lyrics_Database)
library(readxl)
Lyrics_Database <- read_excel("C:/Users/Vishal Shrivastava/Desktop/Weeknd/Lyrics Database.xlsx")
View(Lyrics_Database)
tidy_weeknd <- Lyrics_Database %>%
unnest_tokens_(word,Lyrics) %>%
anti_join(stop_words)
weeknd <- Lyrics_Database
tidy_weeknd <- weeknd %>%
unnest_tokens_(word,Lyrics) %>%
anti_join(stop_words)
tidy_weeknd <- weeknd %>%
unnest_tokens_(word,text) %>%
anti_join(stop_words)
weeknd <- tbl_df(weeknd)
tidy_weeknd <- weeknd %>%
unnest_tokens_(word,Lyrics) %>%
anti_join(stop_words)
weeknd
tidy_weeknd <- weeknd %>%
unnest_tokens_(word,Lyrics) %>%
anti_join(stop_words)
tidy_weeknd <- weeknd %>%
unnest_tokens_("word","Lyrics") %>%
anti_join(stop_words)
View(tidy_weeknd)
word_count <- tidy_weeknd %>%
count(word, sort = TRUE)
View(word_count)
ggplot(tidy_weeknd, aes(word_count)) + geom_col()
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col()
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL)
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL)+
coord_flip()
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle(Words Frequency in Weeknd Songs)
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs")
library(dplyr)
library(tidyverse)
library(gutenbergr)
library(tidytext)
library(tidyr)
weeknd <- Lyrics_Database
weeknd <- tbl_df(weeknd)
tidy_weeknd <- weeknd %>%
unnest_tokens_("word","Lyrics") %>%
anti_join(stop_words)
word_count <- tidy_weeknd %>%
count(word, sort = TRUE)
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs")
library(stringr)
View(tidy_weeknd)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(weeknd_sentiment)
ggplot(weeknd_sentiment,aes(sentiment)) + geom_col()
ggplot(weeknd_sentiment,aes(sentiment)) + geom_col()
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs")
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank())
?theme
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = "black")
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = element_rect())
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = element_rect("black"))
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = element_rect("black"),
panel.grid = element_line("black"))
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = element_rect("black"),
panel.grid = element_line("black"))
tidy_weeknd %>%
count(word, sort = TRUE) %>%
filter(n >= 40) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = "red")) +
geom_col() +
xlab(NULL)+
coord_flip()+
ggtitle("Words Frequency in Weeknd Songs") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.background = element_rect("black"),
panel.grid = element_line("black"),
panel.smooth())
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing"))
library(dplyr)
library(tidyverse)
library(gutenbergr)
library(tidytext)
library(tidyr)
library(stringr)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing"))
View(weeknd_sentiment)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment)
View(weeknd_sentiment)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment) %>%
spread(sentiment, n, fill = 0)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment) %>%
spread(sentiment, n)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment) %>%
spread(sentiment, n, fill = 0)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number()) %>%
ungroup() %>%
unnest_tokens(word, Lyrics)
tidy_weeknd2 <- weeknd %>%
group_by(book) %>%
mutate(linenumber = row_number()) %>%
ungroup() %>%
unnest_tokens(word, Lyrics)
tidy_weeknd2 <- weeknd %>%
group_by(Album) %>%
mutate(linenumber = row_number()) %>%
ungroup() %>%
unnest_tokens(word, Lyrics)
View(tidy_weeknd2)
View(tidy_weeknd)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album,index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
tidy_weeknd2 <- weeknd %>%
group_by(Album) %>%
mutate(linenumber = row_number()) %>%
ungroup() %>%
unnest_tokens(word, Lyrics)
weeknd_sentiment <- tidy_weeknd %>%
inner_join(get_sentiments("bing")) %>%
count(Album,index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
weeknd_sentiment <- tidy_weeknd2 %>%
inner_join(get_sentiments("bing")) %>%
count(Album,index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(weeknd_sentiment)
weeknd_sentiment <- tidy_weeknd2 %>%
inner_join(get_sentiments("bing")) %>%
count(Album,index = linenumber %/% 1, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2)
, scales = "free_x"
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 1, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 3, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_dotplot(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_smooth(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_smooth(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x") +
xlab("Song Number(Approx.)")+
ylab("Sentiment")+
ggtitle("Sentiment Analysis of songs of Weeknd Albums.")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x") +
xlab("Song Number(Approx.)")+
ylab("Sentiment")+
ggtitle("Sentiment Analysis of songs of Weeknd Albums.")
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_smooth(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x") +
xlab("Song Number(Approx.)")+
ylab("Sentiment")+
ggtitle("Sentiment Analysis of songs of Weeknd Albums.")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(weeknd_sentiment, aes(index, sentiment, fill = Album)) +
geom_smooth(show.legend = FALSE) +
facet_wrap(~Album, ncol = 2, scales = "free_x") +
xlab("Song Number(Approx.)")+
ylab("Sentiment")+
ggtitle("Sentiment Analysis of songs of Weeknd Albums.")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
